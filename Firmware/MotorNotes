/*
Startup sequence
initialize IO Pins
Ask MainCPU for values for motors
If no values are stored, goto Startup Calibration
Ask encoder for current position
if motor is in stored position, wait for command to move.


Command list for Motor uCs: A (0 - 3599)     Absolute Angle (int)
                            R (-32,768 - 32,767)  Relative Angle (int)
                            I (0-4,294,967,295) Step Interval in micros (ULong)
                            S (0-4,294,967,295) Steps to take (ULong)
                            D (0-1) Motor Direction (bool)
                            V (-32,768 - 32,767)  Velocity (RPH) (int) // Could be used for angle speed
                            v (-32,768 - 32,767) Velocity (RPH) Speed to use for other commands
                            P Return Current Position Absolute Angle (int)
                            M Return Stepping Mode (byte)
                            G Go with last value
                            H (0-3) Halt the numbered device or all devices if zero
                            L (0-4,294,967,295) Logging Interval
                            C (1-3) Command Status Feedback
              32U2 level?   B (0-3) Break Lock (allow new commands to interrupt previous commands) Lower case unlocks
                            use lower case to setup parameters but not act on them

                            Functions
                              Setup Encoder
                              Check current position
                              Setup Motor
                              Move Motor to New Position
                                Calls check Current Position
                                Calls Setup Motor
                                Sends Step Pulses at set Interval
                                Calls Check Position
                                Compares current position to desired position
                              Rotate Motor at a Set Speed

Function list from cmdParse()
    currentMotorAngle()
    stepMotor()
    ack() ??



*/
